package me.maskat.ArenaManager.ArenaPlugin;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.bukkit.Location;
import org.bukkit.entity.Player;

import me.maskat.ArenaManager.Models.ArenesModel;
import me.maskat.ArenaManager.Models.ModelArena;
import me.maskat.ArenaManager.Models.ModelArenaTeam;

public class PlayerRespawnInArenaEvent {

	private ArpArena arena;
	//Map<TeamType, ArpTeam>
	private Map<String, ArpTeam> teamsMap = new HashMap<>();
	
	private Player player;
	private ArpTeam playerTeam;
	private ModelArena modelArena;
	
	private Location respawnPlayerLocation;

	public PlayerRespawnInArenaEvent(Player player, ModelArena modelArena) {
		this.player = player;
		this.modelArena = modelArena;
		
		this.respawnPlayerLocation = this.playerTeam.getOneRandomLocation();
	}

	public ArpArena getArena() {
		return this.modelArena.getArenaPluginInstanceArpArena();
	}
	
	public ArpPlayer getPlayer() {
		return this.modelArena.getArenaPluginInstanceArpPlayer(player);
	}
	
//	public boolean isRespawnPlayerInArena() {
//		return this.respawnPlayerInArena;
//	}
	public Location getRespawnPlayerLocation() {
		return this.respawnPlayerLocation;
	}
	public void setRespawnPlayerLocation(Location respawnPlayerLocation) {
		this.respawnPlayerLocation = respawnPlayerLocation;
	}
	
//	public void setRespawnPlayerInArena(boolean respawnPlayerInArena) {
//		this.respawnPlayerInArena = respawnPlayerInArena;
//		this.respawnPlayerInArenaLocation = this.playerTeam.getOneRandomLocation();
//	}
	
//	public void setRespawnPlayerInArena(boolean respawnPlayerInArena, Location respawnLocation) {
//		this.respawnPlayerInArena = respawnPlayerInArena;
//		this.respawnPlayerInArenaLocation = respawnLocation;
//	}

	public ArpTeam getTeam(String teamType) {
		return this.teamsMap.get(teamType);
	}
	public Collection<ArpTeam> getTeams() {
		return this.teamsMap.values();
	}
	
//	public void teleportPlayersToRandomLocationsInTeams(boolean freezeAfterTeleport) {
//		for(ArpTeam team : teamsMap.values()) {
//			team.teleportPlayersToRandomLocations(freezeAfterTeleport);
//		}
//	}
	
//	public void setPlayersGamemodeInTeams(GameMode gamemode) {
//		for(ArpTeam team : teamsMap.values()) {
//			team.setPlayersGamemode(gamemode);
//		}
//	}

}
