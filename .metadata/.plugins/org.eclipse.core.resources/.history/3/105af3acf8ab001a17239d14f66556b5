package me.maskat.ArenaManager.ArenaPlugin;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.bukkit.entity.Player;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.EntityDamageEvent.DamageCause;

import me.maskat.ArenaManager.Models.ArenesModel;
import me.maskat.ArenaManager.Models.ModelArena;
import me.maskat.ArenaManager.Models.ModelArenaTeam;

public class PlayerDamageInArenaEvent {

	private Player player;
	
	private DamageCause eventCause;
	private double eventDamage;
	private double eventFinalDamage;
	
	private boolean cancelled;
	
	public PlayerDamageInArenaEvent(Player player, ModelArena modelArena, EntityDamageEvent e) {
		this.player = player;
		this.modelArena = modelArena;
		this.arena = new ArpArena(modelArena);
		
		this.eventCause = e.getCause();
		this.eventDamage = e.getDamage();
		this.eventFinalDamage = e.getFinalDamage();
		
		this.cancelled = false;
		
		for(ModelArenaTeam modelArenaTeam : modelArena.getTeamsMap().values()) {
			if(modelArenaTeam.getType()!=null && modelArenaTeam.getType().length()>0)
			{
				ArpTeam arpTeam = new ArpTeam(modelArenaTeam, true);
				if(ArenesModel.getPlayer(player).getPlayedInsideTeamId() == modelArenaTeam.getId())
					playerTeam = arpTeam;
				this.teamsMap.put(modelArenaTeam.getType(), arpTeam);
			}
		}
	}

	public ArpArena getArena() {
		return this.arena;
	}
	
	public Player getPlayer() {
		return this.player;
	}
	
	public ArpTeam getPlayerTeam() {
		return this.playerTeam;
	}

	public ArpTeam getTeam(String teamType) {
		return this.teamsMap.get(teamType);
	}
	public Collection<ArpTeam> getTeams() {
		return this.teamsMap.values();
	}
	
	public DamageCause getCause() {
		return this.eventCause;
	}
	public double getDamage() {
		return this.eventDamage;
	}
	public double getFinalDamage() {
		return this.eventFinalDamage;
	}

	public void setCancelled(boolean cancelled) {
		this.cancelled = cancelled;
	}
	
	public boolean isCancelled() {
		return this.cancelled;
	}
}
